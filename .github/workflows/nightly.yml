name: Nightly

on:
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  nightly-test:
    name: Nightly Comprehensive Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full test suite
      run: npm test -- --coverage --watchAll=false --verbose
      
    - name: Run performance tests
      run: |
        npm run build-web
        echo "Bundle size analysis completed"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: nightly-test-results-${{ matrix.node-version }}
        path: coverage/
        retention-days: 30

  dependency-update:
    name: Dependency Updates Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Check for outdated dependencies
      run: npm outdated
      
    - name: Create Dependabot PR if needed
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          
          try {
            // Check if there are outdated packages
            const outdated = execSync('npm outdated --json', { encoding: 'utf8' });
            const outdatedPackages = JSON.parse(outdated);
            
            if (Object.keys(outdatedPackages).length > 0) {
              console.log('Found outdated packages:', Object.keys(outdatedPackages));
              
              // Create issue for dependency updates
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'ðŸ”„ Dependency Updates Available',
                body: `
                  ## Outdated Dependencies Detected
                  
                  The following packages have updates available:
                  
                  ${Object.entries(outdatedPackages).map(([pkg, info]) => 
                    `- **${pkg}**: ${info.current} â†’ ${info.latest}`
                  ).join('\n')}
                  
                  ---
                  *This issue was automatically generated by the nightly workflow.*
                `,
                labels: ['dependencies', 'automated'],
              });
            }
          } catch (error) {
            console.log('No outdated packages found or error occurred:', error.message);
          }

  performance-monitoring:
    name: Performance Monitoring
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build and analyze bundle
      run: |
        npm run build-web
        echo "Bundle analysis completed"
        
    - name: Generate performance report
      run: |
        echo "## Performance Report" > performance-report.md
        echo "Generated: $(date)" >> performance-report.md
        echo "" >> performance-report.md
        echo "### Bundle Size" >> performance-report.md
        du -sh dist/ >> performance-report.md
        echo "" >> performance-report.md
        echo "### Build Time" >> performance-report.md
        time npm run build-web 2>&1 >> performance-report.md
        
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: performance-report.md
        retention-days: 30

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=low --json > audit-report.json
      
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-report
        path: audit-report.json
        retention-days: 30
